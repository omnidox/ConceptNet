ps aux | grep postgres




The output you provided shows that there is an instance of PostgreSQL version 10 running on your system. This is likely the reason why you're unable to start another PostgreSQL instance on the default port 5432, as the port is already in use by this running instance.

Here are the steps you can take to resolve the issue:

1. **Stop the Running PostgreSQL Instance**: If you don't need the running PostgreSQL instance, you can stop it using the following command:
   ```bash
   sudo systemctl stop postgresql
   ```

2. **Verify PostgreSQL Has Stopped**: After stopping PostgreSQL, you can verify that it has stopped by running the `ps aux | grep postgres` command again. If the command doesn't show any running PostgreSQL processes (except for the `grep` command itself), then PostgreSQL has been successfully stopped.

3. **Start Your Desired PostgreSQL Instance**: Once the existing PostgreSQL instance has been stopped, you can proceed to start your desired PostgreSQL instance (e.g., the one inside the Docker container).

4. **Consider Changing Ports**: If you need to run multiple instances of PostgreSQL simultaneously, consider changing the port of one of the instances. This can be done by modifying the `postgresql.conf` file and updating the `port` setting.

5. **Backup Important Data**: Before making any changes or stopping any database processes, always ensure that you have backups of any important data.

6. **Docker Specific**: If you're running PostgreSQL inside a Docker container, ensure that you haven't mapped the container's port 5432 to a host port that's already in use by the running PostgreSQL instance. Adjust the port mapping if necessary.

Once you've taken the appropriate steps, you should be able to start your desired PostgreSQL instance without encountering the port conflict error.


Running the docker container and the API agian
When you are done you can just kill the container. And when you wanna start again, first run

sudo docker start conceptnet5
Now the container conceptnet5 started in detached mode. Now run the Flask API server by

sudo docker exec -it -w /conceptnet5/web conceptnet5 python3 conceptnet_web/api.py
Again when you are done, kill the container by

sudo docker kill conceptnet5